
//  Задача: вызов лифта
// В доме два лифта
// реализовать алгоритм отправки наиближайшего на вызывающий этаж.

// алгоритм будет применяться в домах разной этажности.


// Пример:
// в доме 19 этажей
// работают лифт А и лифт В
// лифт А находиться на 0 этаже
// лифт В находиться на 8 этаже
// на вход: 1
// отправляем лифт А


// Получить вызов лифта с определенного этажа.
// Для каждого лифта рассчитать время, необходимое ему добраться до этажа вызова. Это можно сделать, зная текущий этаж лифта и направление его движения. Если лифт движется вверх, то время до прибытия можно рассчитать как разность между этажем вызова и текущим этажем лифта, а если лифт движется вниз, то время до прибытия будет равно разности между текущим этажем лифта и этажем вызова.
// Выбрать лифт, который прибудет быстрее всего. Если оба лифта находятся на одном этаже, то выбрать любой.
// Отправить выбранный лифт на этаж вызова.


// Создаем объекты для лифтов
const elevatorA = {
    currentFloor: 0,
    direction: 'up',
    queue: [],
    distance: function(floor) {
      return Math.abs(this.currentFloor - floor);
    }
  };
  
  const elevatorB = {
    currentFloor: 8,
    direction: 'down',
    queue: [],
    distance: function(floor) {
      return Math.abs(this.currentFloor - floor);
    }
  };
  
  // Определяем, к какому лифту отправить запрос
  function getNearestElevator(floor) {
    const distanceA = elevatorA.distance(floor);
    const distanceB = elevatorB.distance(floor);
  
    if (distanceA < distanceB) {
      return elevatorA;
    } else {
      return elevatorB;
    }
  }
  
  // Пример вызова функции
  const floor = 1;
  const nearestElevator = getNearestElevator(floor);
  console.log(`Отправляем лифт ${nearestElevator === elevatorA ? 'A' : 'B'} на этаж ${floor}`);

  
// //   В этом коде мы создаем два объекта для лифтов с полями текущего этажа,
//  направления движения и очередью ожидающих поездок. Затем мы определяем метод 
//  distance для каждого лифта, который возвращает расстояние между текущим этажом 
//  и целевым этажом. Функция getNearestElevator использует эти методы для определения ближайшего лифта к заданному этажу. 
// Наконец, мы просто вызываем эту функцию для заданного этажа и отправляем найденный лифт на этот этаж.